version: "3"

services:
  zookeeper:
    image: zookeeper:3.4.12
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      microservices_net:
        ipv4_address: 192.168.220.2

  mesos-master:
    image: mesosphere/mesos-master:1.5.0
    privileged: true
    hostname: localhost
    ports:
      - "5050:5050"
    networks:
      microservices_net:
        ipv4_address: 192.168.220.3
    links:
      - zookeeper
    depends_on:
      - zookeeper
    environment:
      MESOS_ZK: zk://zookeeper:2181/mesos
      MESOS_QUORUM: 1
      MESOS_CLUSTER: docker-compose
#      MESOS_REGISTRY: replicated_log # default is in_memory for some reason
      MESOS_HOSTNAME: localhost
      MESOS_WORK_DIR: /var/tmp/mesos
      MESOS_LOG_DIR: /var/log/mesos
      LIBPROCESS_IP: 192.168.220.3

  mesos-slave:
    image: mesosphere/mesos-slave:1.5.0
    privileged: true
    hostname: localhost
    ports:
      - "5051:5051"
    networks:
      microservices_net:
        ipv4_address: 192.168.220.4
    links:
      - zookeeper:zookeeper
      - mesos-master:master.mesos
    depends_on:
      - zookeeper
      - mesos-master
    environment:
      MESOS_MASTER: zk://zookeeper:2181/mesos
      MESOS_CONTAINERIZERS: docker
      MESOS_PORT: 5051
      MESOS_RESOURCES: ports(*):[11000-11999]
      MESOS_HOSTNAME: localhost
      MESOS_WORK_DIR: /var/tmp/mesos
      MESOS_LOG_DIR: /var/log/mesos
      MESOS_SYSTEMD_ENABLE_SUPPORT: "false"
      LIBPROCESS_IP: 192.168.220.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  marathon:
    image: mesosphere/marathon:v1.5.9
    entrypoint:
      - ./bin/start
      - --disable_ha
    hostname: localhost
    ports:
     - "8080:8080"
    networks:
      microservices_net:
        ipv4_address: 192.168.220.5
    links:
      - zookeeper
      - mesos-master
    depends_on:
      - zookeeper
      - mesos-master
      - mesos-slave
    environment:
      - MARATHON_ZK=zk://zookeeper:2181/marathon
      - MARATHON_MASTER=zk://zookeeper:2181/mesos
      - LIBPROCESS_IP=192.168.220.5

  consul-agent-1: &consul-agent
    image: consul:latest
    networks:
      microservices_net:
        ipv4_address: 192.168.220.6
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-agent-2:
    <<: *consul-agent
    networks:
      microservices_net:
        ipv4_address: 192.168.220.7

  consul-agent-3:
    <<: *consul-agent
    networks:
      microservices_net:
        ipv4_address: 192.168.220.8

  consul-server-1: &consul-server
    <<: *consul-agent
    networks:
      microservices_net:
        ipv4_address: 192.168.220.9
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-server-2:
    <<: *consul-server
    networks:
      microservices_net:
        ipv4_address: 192.168.220.10

  consul-server-bootstrap:
    <<: *consul-agent
    networks:
      microservices_net:
        ipv4_address: 192.168.220.11
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0"

  elasticsearch:
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.1
    networks:
      microservices_net:
        ipv4_address: 192.168.220.12
    ports:
    - 9200:9200
#    restart: unless-stopped
    volumes:
    - elasticsearch:/usr/share/elasticsearch/data:rw

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.1
    depends_on:
    - elasticsearch
    networks:
      microservices_net:
        ipv4_address: 192.168.220.13
    ports:
    - 5044:5044
#    restart: unless-stopped
    volumes:
    - ./etc/logstash/pipeline:/usr/share/logstash/pipeline:ro

  kibana:
    depends_on:
    - elasticsearch
    environment:
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_URL: http://192.168.220.12:9200
      ELASTICSEARCH_USERNAME: elastic
    image: docker.elastic.co/kibana/kibana-oss:6.2.1
    networks:
      microservices_net:
        ipv4_address: 192.168.220.15
    ports:
    - 5601:5601
#    restart: unless-stopped

networks:
  microservices_net:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 192.168.220.0/24

volumes:
  elasticsearch:
    driver: local

